function getPatternCoordinates(pattern) {
  switch (pattern) {

    // Lines
    case 'line3':
      return [
        [[0, 0], [0, 1], [0, 2]],
        [[0, 0], [1, 0], [2, 0]],
        [[0, 0], [1, 1], [2, 2]],
        [[0, 2], [1, 1], [2, 0]]
      ];
    case 'line4':
      return [
        [[0, 0], [0, 1], [0, 2], [0, 3]],
        [[0, 0], [1, 0], [2, 0], [3, 0]],
        [[0, 0], [1, 1], [2, 2], [3, 3]],
        [[0, 3], [1, 2], [2, 1], [3, 0]]
      ];
    case 'line5':
      return [
        [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4]],
        [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0]],
        [[0, 0], [1, 1], [2, 2], [3, 3], [4, 4]],
        [[0, 4], [1, 3], [2, 2], [3, 1], [4, 0]]
      ];
    case 'line6':
      return [
        [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5]],
        [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0]],
        [[0, 0], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5]],
        [[0, 5], [1, 4], [2, 3], [3, 2], [4, 1], [5, 0]]
      ];
    case 'line7':
      return [
        [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6]],
        [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0]],
        [[0, 0], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6]],
        [[0, 6], [1, 5], [2, 4], [3, 3], [4, 2], [5, 1], [6, 0]]
      ];
    case 'line8':
      return [
        [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7]],
        [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0]],
        [[0, 0], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7]],
        [[0, 7], [1, 6], [2, 5], [3, 4], [4, 3], [5, 2], [6, 1], [7, 0]]
      ];
    case 'line9':
      return [
        [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8]],
        [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0]],
        [[0, 0], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7], [8, 8]],
        [[0, 8], [1, 7], [2, 6], [3, 5], [4, 4], [5, 3], [6, 2], [7, 1], [8, 0]]
      ];

    // Squares
    case 'square1':
      return [
        [[0, 0], [0, 1], [1, 0], [1, 1]]
      ];
    case 'square2':
      return [
        [[0, 0], [0, 2], [2, 0], [2, 2]]
      ];
    case 'square3':
      return [
        [[0, 0], [0, 3], [3, 0], [3, 3]]
      ];
    case 'square4':
      return [
        [[0, 0], [0, 4], [4, 0], [4, 4]]
      ];
    case 'square5':
      return [
        [[0, 0], [0, 5], [5, 0], [5, 5]]
      ];
    case 'square6':
      return [
        [[0, 0], [0, 6], [6, 0], [6, 6]]
      ];
    case 'square7':
      return [
        [[0, 0], [0, 7], [7, 0], [7, 7]]
      ];
    case 'square8':
      return [
        [[0, 0], [0, 8], [8, 0], [8, 8]]
      ];

    // Diamonds
    case 'diamond1':
      return [
        [[0, 1], [1, 0], [1, 2], [2, 1]]
      ];
    case 'diamond2':
      return [
        [[0, 2], [2, 0], [2, 4], [4, 2]]
      ];
    case 'diamond3':
      return [
        [[0, 3], [3, 0], [3, 6], [6, 3]]
      ];
    case 'diamond4':
      return [
        [[0, 4], [4, 0], [4, 8], [8, 4]]
      ];

    // L Shapes
    case 'lShapeStandard':
      return [
        [[0, 0], [1, 0], [2, 0], [2, 1]],
        [[0, 0], [0, 1], [0, 2], [1, 0]],
        [[0, 0], [0, 1], [1, 1], [2, 1]],
        [[0, 2], [1, 0], [1, 1], [1, 2]]
      ];
    case 'lShapeReversed':
      return [
        [[0, 1], [1, 1], [2, 0], [2, 1]],
        [[0, 0], [1, 0], [1, 1], [1, 2]],
        [[0, 0], [0, 1], [1, 0], [2, 0]],
        [[0, 0], [0, 1], [0, 2], [1, 2]]
      ];
    default:
      throw new Error(`Unknown pattern: ${pattern}`);
  }
}

module.exports = getPatternCoordinates;
